webpackHotUpdate(0,{

/***/ 608:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _createClass = (function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n})();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(75);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactUikitBase = __webpack_require__(155);\n\nvar _reactUikitBase2 = _interopRequireDefault(_reactUikitBase);\n\nvar _ufunc = __webpack_require__(89);\n\nvar _ufunc2 = _interopRequireDefault(_ufunc);\n\nvar _dialog = __webpack_require__(607);\n\nvar _dialog2 = _interopRequireDefault(_dialog);\n\nvar _reactUikitTrigger = __webpack_require__(471);\n\nvar _reactUikitTrigger2 = _interopRequireDefault(_reactUikitTrigger);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Modal = (function (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal(props) {\n    _classCallCheck(this, Modal);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Modal).call(this, props));\n\n    _this.state = {\n      show: false\n    };\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: 'handleCloseClick',\n    value: function handleCloseClick(e) {\n      e.stopPropagation();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // uikit.helpers.getElement(`modal-${this.props.kitid}`).addEventListener('click', this.handleCloseClick);\n    }\n  }, {\n    key: 'toggleModal',\n    value: function toggleModal(e) {\n      var _this2 = this;\n\n      var props = this.props;\n      var modal = _reactUikitBase2.default.helpers.getElement('modal-' + props.kitid);\n      var dialog = _reactUikitBase2.default.helpers.getElement('dialog-' + props.kitid);\n      var body = document.getElementsByTagName('body');\n\n      var show = function show() {\n        body[0].style.paddingRight = '16px';\n        body[0].style.overflow = 'hidden';\n        _this2.setState({ show: true });\n        props.trigger.animate.in(modal, dialog);\n      };\n\n      var hide = function hide() {\n        var kitid = e.target.dataset.kitid;\n        var prefix = kitid.substr(0, kitid.indexOf('-'));\n        console.log(prefix);\n\n        if (prefix === 'modal' || prefix === 'trigger') {\n          body[0].style.paddingRight = '';\n          body[0].style.overflow = '';\n          _this2.setState({ show: false });\n          props.trigger.animate.out(modal, dialog);\n        }\n      };\n\n      console.log(this.state.show);\n      _ufunc2.default.either(show, hide)(!this.state.show);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var props = this.props;\n\n      // CSS classes\n      var cssClassNames = _reactUikitBase2.default.helpers.cleanClasses(['uk-modal', props.classes, props.className]);\n\n      // Elements\n      var caption = _react2.default.createElement('div', { className: 'uk-modal-caption' }, props.caption);\n\n      // Return Component\n      return _react2.default.createElement('div', null, _react2.default.createElement(_reactUikitTrigger2.default, _extends({}, props.trigger, { kitid: 'trigger-' + props.kitid, onClick: function onClick(e) {\n          return _this3.toggleModal(e);\n        } })), _react2.default.createElement('div', _extends({}, props, {\n        className: cssClassNames,\n        'data-kitid': 'modal-' + props.kitid,\n        onClick: function onClick(e) {\n          return _this3.toggleModal(e);\n        }\n      }), _react2.default.createElement(_dialog2.default, _extends({}, props.dialog, {\n        header: props.header,\n        footer: props.footer,\n        kitid: 'dialog-' + props.kitid,\n        onClose: function onClose(e) {\n          return _this3.handleCloseClick(e);\n        }\n      }), props.children), caption));\n    }\n  }]);\n\n  return Modal;\n})(_react2.default.Component);\n\nModal.propTypes = {\n  caption: _react2.default.PropTypes.node,\n  children: _react2.default.PropTypes.any,\n  className: _react2.default.PropTypes.string,\n  classes: _react2.default.PropTypes.array,\n  close: _react2.default.PropTypes.bool,\n  dialog: _react2.default.PropTypes.object,\n  footer: _react2.default.PropTypes.any,\n  kitid: _react2.default.PropTypes.string,\n  header: _react2.default.PropTypes.string,\n  show: _react2.default.PropTypes.bool,\n  trigger: _react2.default.PropTypes.object\n};\n\nexports.default = _reactUikitBase2.default.base(Modal);\n//# sourceMappingURL=data:application/json;base64,");

/***/ }

})