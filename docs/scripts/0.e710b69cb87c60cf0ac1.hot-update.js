webpackHotUpdate(0,{

/***/ 1856:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _createClass = (function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n})();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(1682);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactUikitBase = __webpack_require__(164);\n\nvar _reactUikitBase2 = _interopRequireDefault(_reactUikitBase);\n\nvar _ufunc = __webpack_require__(1683);\n\nvar _ufunc2 = _interopRequireDefault(_ufunc);\n\nvar _reactUikitBadge = __webpack_require__(1119);\n\nvar _reactUikitBadge2 = _interopRequireDefault(_reactUikitBadge);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ListItem = (function (_React$Components) {\n  _inherits(ListItem, _React$Components);\n\n  function ListItem() {\n    _classCallCheck(this, ListItem);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(ListItem).apply(this, arguments));\n  }\n\n  _createClass(ListItem, [{\n    key: 'handleClick',\n    value: function handleClick(e, index) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      var idx = undefined;\n      if (index.charAt && index.charAt(0) === '.') {\n        idx = index.match(/\\$(.+)$/)[1];\n      } else {\n        idx = index;\n      }\n\n      if (this.props.onClick) {\n        this.props.onClick(Object.assign({\n          item: {\n            index: idx,\n            kitid: this.props.kitid\n          }\n        }, e));\n      }\n    }\n  }, {\n    key: 'handleSelect',\n    value: function handleSelect(e, index) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.props.onSelect(Object.assign({ kitid: this.getItemId(index) }, e));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n\n      // CSS classes\n      var cssClassNames = _reactUikitBase2.default.helpers.cleanClasses([props.active ? 'uk-active' : null, props.classes, props.className]);\n\n      // Elements\n      var badge = _ufunc2.default.maybeIf(_react2.default.createElement(_reactUikitBadge2.default, {\n        kitid: 'badge-' + props.kitid,\n        floats: 'right',\n        body: props.badge ? props.badge.body : null,\n        context: props.badge ? props.badge.context : null,\n        notification: props.badge ? props.badge.notification : null\n      }))(props.badge);\n\n      var selectable = function selectable(checked, index) {\n        return _ufunc2.default.maybeIf(_react2.default.createElement('input', {\n          type: 'checkbox',\n          className: 'close',\n          checked: checked,\n          'data-kitid': 'input-' + props.kitid,\n          onSelect: function onSelect(e, index) {\n            return _this2.handleSelect(e, index);\n          }\n        }))(props.selectable);\n      };\n\n      var attr = _extends({}, props, _reactUikitBase2.default.events(props), {\n        'data-kitid': props.kitid,\n        className: cssClassNames,\n        onClick: function onClick(e, index) {\n          return _this2.handleClick(e, index);\n        }\n      });\n\n      var link = _react2.default.createElement('li', _extends({}, attr, {\n        className: cssClassNames }), _react2.default.createElement('a', { style: { display: 'block' },\n        href: props.href,\n        className: props.active ? 'uk-active' : null\n      }, selectable, ' ', props.body, ' ', badge));\n\n      var text = _react2.default.createElement('li', attr, props.selectable, ' ', props.body, ' ', props.children);\n\n      // Return Component\n      var component = _ufunc2.default.either(link, text);\n      return component(props.href);\n    }\n  }]);\n\n  return ListItem;\n})(_react2.default.Components);\n\n;\n\nListItem.propTypes = {\n  active: _react2.default.PropTypes.bool,\n  badge: _react2.default.PropTypes.object,\n  children: _react2.default.PropTypes.any,\n  className: _react2.default.PropTypes.string,\n  classes: _react2.default.PropTypes.array,\n  description: _react2.default.PropTypes.string,\n  body: _react2.default.PropTypes.string,\n  href: _react2.default.PropTypes.string,\n  kitid: _react2.default.PropTypes.string\n  // selectable  : React.PropTypes.element\n};\n\nexports.default = _reactUikitBase2.default.base(ListItem);\n//# sourceMappingURL=data:application/json;base64,");

/***/ }

})