webpackHotUpdate(0,{

/***/ 958:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _createClass = (function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n})();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(881);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactUikitBase = __webpack_require__(899);\n\nvar _reactUikitBase2 = _interopRequireDefault(_reactUikitBase);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar events = function events(props) {\n  return {\n    // Mouse\n    onClick: props.onClick,\n    onDblclick: props.onDblclick,\n    onMouseDown: props.onMouseDown,\n    onMouseEnter: props.onMouseEnter,\n    onMouseLeave: props.onMouseLeave,\n    onMouseMove: props.onMouseMove,\n    onMouseOver: props.onMouseOver,\n    onMouseOut: props.onMouseOut,\n    onMouseUP: props.onMouseUP,\n\n    // Keyboard\n    onKeyDown: props.onKeyDown,\n    onKeyPress: props.onKeyPress,\n    onKeyUp: props.onKeyUp,\n\n    // Form\n    onBlur: props.onBlur,\n    onChange: props.onChange,\n    onFocus: props.onFocus,\n    onFocusIn: props.onFocusIn,\n    onInput: props.onInput,\n    onInvaid: props.onInvaid,\n    onReset: props.onReset,\n    onSearch: props.onSearch,\n    onSelect: props.onSelect,\n    onSubmit: props.onSubmit,\n\n    // Frame/Object\n    onBeforeUnload: props.onBeforeUnload,\n    onHashChange: props.onHashChange,\n    onLoad: props.onLoad,\n    onPageShow: props.onPageShow,\n    onPageHide: props.onPageHide,\n    onResize: props.onResize,\n    onScroll: props.onScroll,\n    onUload: props.onUload,\n\n    // Drag\n    onDrag: props.onDrag,\n    onDraged: props.onDraged,\n    onDragEnter: props.onDragEnter,\n    onDragLeave: props.onDragLeave,\n    onDragOver: props.onDragOver,\n    onDragStart: props.onDragStart,\n    onDrop: props.onDrop,\n\n    // Clipboard\n    onCopy: props.onCopy,\n    onCut: props.onCut,\n    onPaste: props.onPaste,\n\n    // Print\n    onAfterPrint: props.onAfterPrint,\n    onBeforePrint: props.onBeforePrint,\n\n    // Media\n    onCanPlay: props.onCanPlay,\n    onCanPlayThrough: props.onCanPlayThrough,\n    onDurationChange: props.onDurationChange,\n    onEmptied: props.onEmptied,\n    onEnded: props.onEnded,\n    onLoadedData: props.onLoadedData,\n    onLoadedMetaData: props.onLoadedMetaData,\n    onLoadStart: props.onLoadStart,\n    onPause: props.oPausenPause,\n    onPlay: props.onPlay,\n    onPlaying: props.onPlaying,\n    onProgress: props.onProgress,\n    onRateChange: props.onRateChange,\n    onSeeked: props.onSeeked,\n    onSeeking: props.onSeeking,\n    onStalled: props.onStalled,\n    onSuspend: props.onSuspend,\n    ontimeUpdate: props.ontimeUpdate,\n    onVolumeChange: props.onVolumeChange,\n    onWaiting: props.onWaiting,\n\n    // Animation\n    animationend: props.animationend,\n    animationIteration: props.animationIteration,\n    animationStart: props.animationStart,\n\n    // Transition\n    transitionend: props.transitionend,\n\n    // Server-Sent\n    onOpen: props.onOpen,\n\n    // Misc\n    onAbort: props.onAbort,\n    onError: props.onError,\n    onMessage: props.onMessage,\n    onMouseWheel: props.onMouseWheel,\n    onOnline: props.onOnline,\n    onOffline: props.onOffline,\n    onPopState: props.onPopState,\n    onShow: props.onShow,\n    onStorage: props.onStorage,\n    onToggle: props.onToggle,\n    onWheel: props.onWheel,\n\n    // Touch\n    onTouchCancel: props.onTouchCancel,\n    onTouched: props.onTouched,\n    onTouchMove: props.onTouchMove,\n    onTouchStart: props.onTouchStart\n  };\n};\n// on: props.on,\n\nvar Button = (function (_React$Component) {\n  _inherits(Button, _React$Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(Button).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: 'render',\n    value: function render() {\n      var props = this.props;\n\n      // CSS classes\n      var context = {\n        primary: ' uk-button-primary',\n        success: ' uk-button-success',\n        danger: ' uk-button-danger',\n        link: ' uk-button-link'\n      };\n\n      var size = {\n        mini: ' uk-button-mini',\n        small: ' uk-button-small',\n        large: ' uk-button-large'\n      };\n\n      var cssClassNames = _reactUikitBase2.default.helpers.cleanClasses(['uk-button', props.classes, props.block ? 'uk-width-1-1' : null, props.context ? context[props.context] : null, props.size ? size[props.size] : null, props.className]);\n\n      // Elements\n      var ignoreProps = ['type'];\n\n      var attr = _extends({}, _reactUikitBase2.default.helpers.cleanProps(props, ignoreProps), events(props), {\n        'data-kitid': props.kitid\n\n      });\n\n      var type = {\n        button: _react2.default.createElement('button', _extends({}, attr, {\n          className: cssClassNames,\n          type: 'button',\n          disabled: props.disabled\n        }), props.body, props.children),\n\n        close: _react2.default.createElement('a', _extends({}, _reactUikitBase2.default.helpers.cleanProps(props, ignoreProps), {\n          className: 'uk-close ' + cssClassNames,\n          href: '#'\n        })),\n\n        link: _react2.default.createElement('a', _extends({}, _reactUikitBase2.default.helpers.cleanProps(props, ignoreProps), {\n          className: cssClassNames,\n          href: '#',\n          role: 'button'\n        }), props.body, props.children)\n      };\n\n      // Return Component\n      return type[props.type] || type['button'];\n    }\n  }]);\n\n  return Button;\n})(_react2.default.Component);\n\nButton.propTypes = {\n  body: _react2.default.PropTypes.string,\n  block: _react2.default.PropTypes.bool,\n  dropdown: _react2.default.PropTypes.bool,\n  context: _react2.default.PropTypes.oneOf(['primary', 'success', 'danger', 'link']),\n  disabled: _react2.default.PropTypes.bool,\n  size: _react2.default.PropTypes.oneOf(['mini', 'small', 'large']),\n  type: _react2.default.PropTypes.oneOf(['button', 'close', 'link'])\n};\nexports.default = _reactUikitBase2.default.base(Button);\n//# sourceMappingURL=data:application/json;base64,");

/***/ }

})