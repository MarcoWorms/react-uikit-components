webpackHotUpdate(0,{

/***/ 620:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ufunc = __webpack_require__(171);\n\nvar _ufunc2 = _interopRequireDefault(_ufunc);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar pos = function pos(element) {\n  return {\n    top: element.offsetTop,\n    left: element.offsetLeft\n  };\n};\n\nvar dim = function dim(element) {\n  return {\n    height: element.offsetHeight,\n    width: element.offsetWidth\n  };\n};\n\nvar offset = function offset(opts) {\n  var target = opts.target;\n  var element = opts.element;\n  var flip = opts.flip;\n  var boundary = opts.boundary;\n\n  var boundaryDim = undefined;\n\n  if (boundary) {\n    boundaryDim = dim(boundary);\n  } else {\n    boundaryDim = {\n      width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n      height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n    };\n  }\n\n  var targetDetails = {\n    pos: pos(target),\n    dim: dim(target),\n    boundary: target.getBoundingClientRect()\n  };\n\n  var elementDetails = {\n    pos: pos(element),\n    dim: dim(element),\n    boundary: element.getBoundingClientRect()\n  };\n\n  var horFlip = _ufunc2.default.either(function () {\n    return targetDetails.pos.top + targetDetails.dim.height;\n  }, function () {\n    return targetDetails.pos.top - elementDetails.dim.height;\n  });\n\n  var lrVerFlip = _ufunc2.default.either(function () {\n    return targetDetails.pos.left + targetDetails.dim.width;\n  }, function () {\n    return targetDetails.pos.left - elementDetails.dim.width;\n  });\n\n  var top = horFlip(flip && targetDetails.boundary.top - elementDetails.dim.height < 0);\n  var bottom = horFlip(flip && targetDetails.boundary.top + elementDetails.dim.height + targetDetails.dim.height < boundaryDim.height);\n\n  var tbVerLeft = targetDetails.pos.left;\n  var tbVerRight = targetDetails.pos.left - (elementDetails.dim.width - targetDetails.dim.width);\n\n  var horCenter = targetDetails.pos.left - (elementDetails.dim.width - targetDetails.dim.width) / 2;\n  var verCenter = bottom - (elementDetails.dim.height + targetDetails.dim.height) / 2;\n\n  var lrHorLeft = undefined;\n  var lrHorRight = undefined;\n\n  if (flip) {\n    lrHorLeft = lrVerFlip(targetDetails.boundary.left - elementDetails.dim.width < 0);\n    lrHorRight = lrVerFlip(targetDetails.boundary.left + elementDetails.dim.width + targetDetails.dim.width < boundaryDim.width);\n  } else {\n    lrHorLeft = lrVerFlip(true);\n    lrHorRight = lrVerFlip(true);\n  }\n\n  console.log(targetDetails.boundary.left);\n  console.log(elementDetails.dim.width);\n  console.log(targetDetails.dim.width);\n  console.log(boundaryDim.width);\n  console.log('eq: ', targetDetails.boundary.left + elementDetails.dim.width + targetDetails.dim.width);\n  console.log(flip && targetDetails.boundary.left + elementDetails.dim.width + targetDetails.dim.width < boundaryDim.width);\n  console.log(lrHorRight);\n\n  var position = {\n\n    'bottom-left': { top: bottom, left: tbVerLeft },\n    'bottom-center': { top: bottom, left: horCenter },\n    'bottom-right': { top: bottom, left: tbVerRight },\n\n    'top-left': { top: top, left: tbVerLeft },\n    'top-center': { top: top, left: horCenter },\n    'top-right': { top: top, left: tbVerRight },\n\n    'left-top': { top: top, left: lrHorLeft },\n    'left-center': { top: verCenter, left: lrHorLeft },\n    'left-bottom': { top: bottom, left: lrHorLeft },\n\n    'right-top': { top: top, left: lrHorRight },\n    'right-center': { top: verCenter, left: lrHorRight },\n    'right-bottom': { top: bottom, left: lrHorRight }\n  };\n\n  return function (prop) {\n    return position[prop] || position['bottom-left'];\n  };\n};\n\nexports.default = {\n  dim: dim,\n  pos: pos,\n  offset: offset\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vY29tcG9uZW50cy9yZWFjdC11aWtpdC1kcm9wZG93bi9saWIvcG9zT2Zmc2V0LmpzP2NlMjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOztBQUViLE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLFlBQVksRUFBRTtBQUMzQyxPQUFLLEVBQUUsSUFBSTtDQUNaLENBQUMsQ0FBQzs7QUFFSCxJQUFJLE1BQU0sR0FBRyxtQkFBTyxDQUFDLEdBQU8sQ0FBQyxDQUFDOztBQUU5QixJQUFJLE9BQU8sR0FBRyxzQkFBc0IsQ0FBQyxNQUFNLENBQUMsQ0FBQzs7QUFFN0MsU0FBUyxzQkFBc0IsQ0FBQyxHQUFHLEVBQUU7QUFBRSxTQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsVUFBVSxHQUFHLEdBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQztDQUFFOztBQUUvRixJQUFJLEdBQUcsR0FBRyxTQUFTLEdBQUcsQ0FBQyxPQUFPLEVBQUU7QUFDOUIsU0FBTztBQUNMLE9BQUcsRUFBRSxPQUFPLENBQUMsU0FBUztBQUN0QixRQUFJLEVBQUUsT0FBTyxDQUFDLFVBQVU7R0FDekIsQ0FBQztDQUNILENBQUM7O0FBRUYsSUFBSSxHQUFHLEdBQUcsU0FBUyxHQUFHLENBQUMsT0FBTyxFQUFFO0FBQzlCLFNBQU87QUFDTCxVQUFNLEVBQUUsT0FBTyxDQUFDLFlBQVk7QUFDNUIsU0FBSyxFQUFFLE9BQU8sQ0FBQyxXQUFXO0dBQzNCLENBQUM7Q0FDSCxDQUFDOztBQUVGLElBQUksTUFBTSxHQUFHLFNBQVMsTUFBTSxDQUFDLElBQUksRUFBRTtBQUNqQyxNQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBQ3pCLE1BQUksT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7QUFDM0IsTUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztBQUNyQixNQUFJLFFBQVEsR0FBRyxJ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Q0FBQztHQUNsRCxDQUFDO0NBQ0gsQ0FBQzs7QUFFRixPQUFPLENBQUMsT0FBTyxHQUFHO0FBQ2hCLEtBQUcsRUFBRSxHQUFHO0FBQ1IsS0FBRyxFQUFFLEdBQUc7QUFDUixRQUFNLEVBQUUsTUFBTTtDQUNmIiwiZmlsZSI6IjYyMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF91ZnVuYyA9IHJlcXVpcmUoJ3VmdW5jJyk7XG5cbnZhciBfdWZ1bmMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdWZ1bmMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcG9zID0gZnVuY3Rpb24gcG9zKGVsZW1lbnQpIHtcbiAgcmV0dXJuIHtcbiAgICB0b3A6IGVsZW1lbnQub2Zmc2V0VG9wLFxuICAgIGxlZnQ6IGVsZW1lbnQub2Zmc2V0TGVmdFxuICB9O1xufTtcblxudmFyIGRpbSA9IGZ1bmN0aW9uIGRpbShlbGVtZW50KSB7XG4gIHJldHVybiB7XG4gICAgaGVpZ2h0OiBlbGVtZW50Lm9mZnNldEhlaWdodCxcbiAgICB3aWR0aDogZWxlbWVudC5vZmZzZXRXaWR0aFxuICB9O1xufTtcblxudmFyIG9mZnNldCA9IGZ1bmN0aW9uIG9mZnNldChvcHRzKSB7XG4gIHZhciB0YXJnZXQgPSBvcHRzLnRhcmdldDtcbiAgdmFyIGVsZW1lbnQgPSBvcHRzLmVsZW1lbnQ7XG4gIHZhciBmbGlwID0gb3B0cy5mbGlwO1xuICB2YXIgYm91bmRhcnkgPSBvcHRzLmJvdW5kYXJ5O1xuXG4gIHZhciBib3VuZGFyeURpbSA9IHVuZGVmaW5lZDtcblxuICBpZiAoYm91bmRhcnkpIHtcbiAgICBib3VuZGFyeURpbSA9IGRpbShib3VuZGFyeSk7XG4gIH0gZWxzZSB7XG4gICAgYm91bmRhcnlEaW0gPSB7XG4gICAgICB3aWR0aDogTWF0aC5tYXgoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoLCB3aW5kb3cuaW5uZXJXaWR0aCB8fCAwKSxcbiAgICAgIGhlaWdodDogTWF0aC5tYXgoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCwgd2luZG93LmlubmVySGVpZ2h0IHx8IDApXG4gICAgfTtcbiAgfVxuXG4gIHZhciB0YXJnZXREZXRhaWxzID0ge1xuICAgIHBvczogcG9zKHRhcmdldCksXG4gICAgZGltOiBkaW0odGFyZ2V0KSxcbiAgICBib3VuZGFyeTogdGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gIH07XG5cbiAgdmFyIGVsZW1lbnREZXRhaWxzID0ge1xuICAgIHBvczogcG9zKGVsZW1lbnQpLFxuICAgIGRpbTogZGltKGVsZW1lbnQpLFxuICAgIGJvdW5kYXJ5OiBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gIH07XG5cbiAgdmFyIGhvckZsaXAgPSBfdWZ1bmMyLmRlZmF1bHQuZWl0aGVyKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGFyZ2V0RGV0YWlscy5wb3MudG9wICsgdGFyZ2V0RGV0YWlscy5kaW0uaGVpZ2h0O1xuICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRhcmdldERldGFpbHMucG9zLnRvcCAtIGVsZW1lbnREZXRhaWxzLmRpbS5oZWlnaHQ7XG4gIH0pO1xuXG4gIHZhciBsclZlckZsaXAgPSBfdWZ1bmMyLmRlZmF1bHQuZWl0aGVyKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGFyZ2V0RGV0YWlscy5wb3MubGVmdCArIHRhcmdldERldGFpbHMuZGltLndpZHRoO1xuICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRhcmdldERldGFpbHMucG9zLmxlZnQgLSBlbGVtZW50RGV0YWlscy5kaW0ud2lkdGg7XG4gIH0pO1xuXG4gIHZhciB0b3AgPSBob3JGbGlwKGZsaXAgJiYgdGFyZ2V0RGV0YWlscy5ib3VuZGFyeS50b3AgLSBlbGVtZW50RGV0YWlscy5kaW0uaGVpZ2h0IDwgMCk7XG4gIHZhciBib3R0b20gPSBob3JGbGlwKGZsaXAgJiYgdGFyZ2V0RGV0YWlscy5ib3VuZGFyeS50b3AgKyBlbGVtZW50RGV0YWlscy5kaW0uaGVpZ2h0ICsgdGFyZ2V0RGV0YWlscy5kaW0uaGVpZ2h0IDwgYm91bmRhcnlEaW0uaGVpZ2h0KTtcblxuICB2YXIgdGJWZXJMZWZ0ID0gdGFyZ2V0RGV0YWlscy5wb3MubGVmdDtcbiAgdmFyIHRiVmVyUmlnaHQgPSB0YXJnZXREZXRhaWxzLnBvcy5sZWZ0IC0gKGVsZW1lbnREZXRhaWxzLmRpbS53aWR0aCAtIHRhcmdldERldGFpbHMuZGltLndpZHRoKTtcblxuICB2YXIgaG9yQ2VudGVyID0gdGFyZ2V0RGV0YWlscy5wb3MubGVmdCAtIChlbGVtZW50RGV0YWlscy5kaW0ud2lkdGggLSB0YXJnZXREZXRhaWxzLmRpbS53aWR0aCkgLyAyO1xuICB2YXIgdmVyQ2VudGVyID0gYm90dG9tIC0gKGVsZW1lbnREZXRhaWxzLmRpbS5oZWlnaHQgKyB0YXJnZXREZXRhaWxzLmRpbS5oZWlnaHQpIC8gMjtcblxuICB2YXIgbHJIb3JMZWZ0ID0gdW5kZWZpbmVkO1xuICB2YXIgbHJIb3JSaWdodCA9IHVuZGVmaW5lZDtcblxuICBpZiAoZmxpcCkge1xuICAgIGxySG9yTGVmdCA9IGxyVmVyRmxpcCh0YXJnZXREZXRhaWxzLmJvdW5kYXJ5LmxlZnQgLSBlbGVtZW50RGV0YWlscy5kaW0ud2lkdGggPCAwKTtcbiAgICBsckhvclJpZ2h0ID0gbHJWZXJGbGlwKHRhcmdldERldGFpbHMuYm91bmRhcnkubGVmdCArIGVsZW1lbnREZXRhaWxzLmRpbS53aWR0aCArIHRhcmdldERldGFpbHMuZGltLndpZHRoIDwgYm91bmRhcnlEaW0ud2lkdGgpO1xuICB9IGVsc2Uge1xuICAgIGxySG9yTGVmdCA9IGxyVmVyRmxpcCh0cnVlKTtcbiAgICBsckhvclJpZ2h0ID0gbHJWZXJGbGlwKHRydWUpO1xuICB9XG5cbiAgY29uc29sZS5sb2codGFyZ2V0RGV0YWlscy5ib3VuZGFyeS5sZWZ0KTtcbiAgY29uc29sZS5sb2coZWxlbWVudERldGFpbHMuZGltLndpZHRoKTtcbiAgY29uc29sZS5sb2codGFyZ2V0RGV0YWlscy5kaW0ud2lkdGgpO1xuICBjb25zb2xlLmxvZyhib3VuZGFyeURpbS53aWR0aCk7XG4gIGNvbnNvbGUubG9nKCdlcTogJywgdGFyZ2V0RGV0YWlscy5ib3VuZGFyeS5sZWZ0ICsgZWxlbWVudERldGFpbHMuZGltLndpZHRoICsgdGFyZ2V0RGV0YWlscy5kaW0ud2lkdGgpO1xuICBjb25zb2xlLmxvZyhmbGlwICYmIHRhcmdldERldGFpbHMuYm91bmRhcnkubGVmdCArIGVsZW1lbnREZXRhaWxzLmRpbS53aWR0aCArIHRhcmdldERldGFpbHMuZGltLndpZHRoIDwgYm91bmRhcnlEaW0ud2lkdGgpO1xuICBjb25zb2xlLmxvZyhsckhvclJpZ2h0KTtcblxuICB2YXIgcG9zaXRpb24gPSB7XG5cbiAgICAnYm90dG9tLWxlZnQnOiB7IHRvcDogYm90dG9tLCBsZWZ0OiB0YlZlckxlZnQgfSxcbiAgICAnYm90dG9tLWNlbnRlcic6IHsgdG9wOiBib3R0b20sIGxlZnQ6IGhvckNlbnRlciB9LFxuICAgICdib3R0b20tcmlnaHQnOiB7IHRvcDogYm90dG9tLCBsZWZ0OiB0YlZlclJpZ2h0IH0sXG5cbiAgICAndG9wLWxlZnQnOiB7IHRvcDogdG9wLCBsZWZ0OiB0YlZlckxlZnQgfSxcbiAgICAndG9wLWNlbnRlcic6IHsgdG9wOiB0b3AsIGxlZnQ6IGhvckNlbnRlciB9LFxuICAgICd0b3AtcmlnaHQnOiB7IHRvcDogdG9wLCBsZWZ0OiB0YlZlclJpZ2h0IH0sXG5cbiAgICAnbGVmdC10b3AnOiB7IHRvcDogdG9wLCBsZWZ0OiBsckhvckxlZnQgfSxcbiAgICAnbGVmdC1jZW50ZXInOiB7IHRvcDogdmVyQ2VudGVyLCBsZWZ0OiBsckhvckxlZnQgfSxcbiAgICAnbGVmdC1ib3R0b20nOiB7IHRvcDogYm90dG9tLCBsZWZ0OiBsckhvckxlZnQgfSxcblxuICAgICdyaWdodC10b3AnOiB7IHRvcDogdG9wLCBsZWZ0OiBsckhvclJpZ2h0IH0sXG4gICAgJ3JpZ2h0LWNlbnRlcic6IHsgdG9wOiB2ZXJDZW50ZXIsIGxlZnQ6IGxySG9yUmlnaHQgfSxcbiAgICAncmlnaHQtYm90dG9tJzogeyB0b3A6IGJvdHRvbSwgbGVmdDogbHJIb3JSaWdodCB9XG4gIH07XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChwcm9wKSB7XG4gICAgcmV0dXJuIHBvc2l0aW9uW3Byb3BdIHx8IHBvc2l0aW9uWydib3R0b20tbGVmdCddO1xuICB9O1xufTtcblxuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICBkaW06IGRpbSxcbiAgcG9zOiBwb3MsXG4gIG9mZnNldDogb2Zmc2V0XG59O1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4uL2NvbXBvbmVudHMvcmVhY3QtdWlraXQtZHJvcGRvd24vbGliL3Bvc09mZnNldC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }

})