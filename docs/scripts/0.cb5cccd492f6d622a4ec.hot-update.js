webpackHotUpdate(0,{

/***/ 3938:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(1884);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactUikitBase = __webpack_require__(3569);\n\nvar _reactUikitBase2 = _interopRequireDefault(_reactUikitBase);\n\nvar _ufunc = __webpack_require__(1141);\n\nvar _ufunc2 = _interopRequireDefault(_ufunc);\n\nvar _reactUikitImg = __webpack_require__(4447);\n\nvar _reactUikitImg2 = _interopRequireDefault(_reactUikitImg);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar Overlay = function Overlay(props) {\n  // CSS classes\n  var captionCSS = {\n    bottom: 'uk-overlay-bottom',\n    left: 'uk-overlay-left',\n    right: 'uk-overlay-right',\n    top: 'uk-overlay-top'\n  };\n\n  var cssClassNames = _reactUikitBase2.default.helpers.cleanClasses(['uk-overlay', props.image ? 'uk-overlay-hover' : null, props.classes]);\n\n  var captionClassNames = _reactUikitBase2.default.helpers.cleanClasses(['uk-overlay-panel', props.background ? 'uk-overlay-background' : null, props.icon ? 'uk-overlay-icon' : null, props.caption ? captionCSS[props.caption] : null]);\n\n  // Elements\n  var link = _ufunc2.default.maybeIf(_react2.default.createElement('a', { className: 'uk-position-cover', href: '#' }), props.link);\n\n  var img = _react2.default.createElement(_reactUikitImg2.default, {\n    ref: 'img',\n    alt: props.alt,\n    height: props.height,\n    large: props.large,\n    medium: props.medium,\n    small: props.small,\n    src: props.src,\n    width: props.width,\n    type: props.type,\n    xlarge: props.xlarge,\n    className: props.image ? 'uk-overlay-panel uk-overlay-image' : null\n  });\n\n  var figure = _react2.default.createElement('figure', _extends({}, props, { className: cssClassNames }), _react2.default.createElement(_reactUikitImg2.default, {\n    ref: 'img',\n    alt: props.alt,\n    height: props.height,\n    large: props.large,\n    medium: props.medium,\n    small: props.small,\n    src: props.image,\n    width: props.width,\n    type: props.type,\n    xlarge: props.xlarge,\n    'data-kitid': props.kitid\n  }), img, link);\n\n  var caption = _react2.default.createElement('figcaption', _extends({\n    className: captionClassNames\n  }, props, {\n    'data-kitid': props.kitid\n  }), props.children);\n\n  var linkCaption = _react2.default.createElement('div', _extends({\n    className: cssClassNames\n  }, props, {\n    'data-kitid': props.kitid\n  }), props.children);\n\n  var figureCaption = _react2.default.createElement('figure', _extends({\n    className: cssClassNames\n  }, props, {\n    'data-kitid': props.kitid\n  }), img, _ufunc2.default.either(linkCaption, caption)(props.link), link);\n\n  // Return Component\n  var component = _ufunc2.default.either(figure, figureCaption);\n  return component(props.image);\n};\n\nOverlay.propTypes = {\n  alt: _react2.default.PropTypes.string,\n  background: _react2.default.PropTypes.bool,\n  flex: _react2.default.PropTypes.bool,\n  height: _react2.default.PropTypes.string,\n  icon: _react2.default.PropTypes.bool,\n  image: _react2.default.PropTypes.string,\n  large: _react2.default.PropTypes.object,\n  medium: _react2.default.PropTypes.object,\n  caption: _react2.default.PropTypes.string,\n  small: _react2.default.PropTypes.object,\n  src: _react2.default.PropTypes.string,\n  xlarge: _react2.default.PropTypes.object\n};\n\nexports.default = _reactUikitBase2.default.base(Overlay);\n//# sourceMappingURL=data:application/json;base64,");

/***/ },

/***/ 4447:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(1884);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactUikitBase = __webpack_require__(3569);\n\nvar _reactUikitBase2 = _interopRequireDefault(_reactUikitBase);\n\nvar _ufunc = __webpack_require__(1141);\n\nvar _ufunc2 = _interopRequireDefault(_ufunc);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Img = (function (_React$Component) {\n  _inherits(Img, _React$Component);\n\n  function Img(props) {\n    _classCallCheck(this, Img);\n\n    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Img).call(this, props));\n\n    _this.updateImg = _this.updateImg.bind(_this);\n    _this.element = null;\n    return _this;\n  }\n\n  _createClass(Img, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.element = _reactUikitBase2.default.helpers.getElement(this.props.kitid);\n      this.updateImg(this.element);\n      window.addEventListener('resize', this.updateImg);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateImg);\n    }\n  }, {\n    key: 'updateImg',\n    value: function updateImg() {\n      var props = this.props;\n      var element = this.element;\n\n      var screen = _reactUikitBase2.default.helpers.breakpoints().screen;\n      var locked = false;\n\n      if (!locked) {\n        var updateElement = function updateElement(media) {\n          if (props.cover) {\n            element.style.backgroundImage = props[media].src ? 'url(' + props[media].src + ')' : 'url(' + props.src + ')';\n          } else {\n            element.src = props[media].src || props.src;\n            element.alt = props[media].alt || props.alt;\n          }\n\n          element.style.width = props[media].width || props.width;\n          element.style.height = props[media].height || props.height;\n        };\n\n        if (props.small || props.medium || props.large || props.xlarge) {\n          if (screen.small) {\n            updateElement('small');\n          } else if (screen.medium) {\n            updateElement('medium');\n          } else if (screen.large) {\n            updateElement('large');\n          } else if (screen.xlarge) {\n            updateElement('xlarge');\n          }\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.props;\n\n      // CSS classes\n      var cssClassNames = _reactUikitBase2.default.helpers.cleanClasses([props.cover ? 'uk-cover-background' : null, props.classes, props.className]);\n\n      // Elements\n      var ignoreProps = ['alt', 'src'];\n      var attr = _extends({}, _reactUikitBase2.default.events(props), {\n        className: cssClassNames,\n        'data-kitid': props.kitid\n      });\n\n      var img = _react2.default.createElement('img', _extends({}, props, attr));\n\n      var cover = _react2.default.createElement(\n        'div',\n        _extends({}, _reactUikitBase2.default.helpers.cleanProps(ignoreProps)(props), attr),\n        props.children\n      );\n\n      // Return Component\n      var component = _ufunc2.default.either(cover, img);\n      return component(props.cover);\n    }\n  }]);\n\n  return Img;\n})(_react2.default.Component);\n\nImg.propTypes = {\n  alt: _react2.default.PropTypes.string,\n  children: _react2.default.PropTypes.any,\n  className: _react2.default.PropTypes.string,\n  classes: _react2.default.PropTypes.array,\n  cover: _react2.default.PropTypes.bool,\n  height: _react2.default.PropTypes.string,\n  kitid: _react2.default.PropTypes.string,\n  large: _react2.default.PropTypes.object,\n  medium: _react2.default.PropTypes.object,\n  small: _react2.default.PropTypes.object,\n  src: _react2.default.PropTypes.string,\n  width: _react2.default.PropTypes.string,\n  xlarge: _react2.default.PropTypes.object\n};\n\nexports.default = _reactUikitBase2.default.base(Img);\n//# sourceMappingURL=data:application/json;base64,");

/***/ }

})