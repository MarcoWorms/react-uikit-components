'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactUikitCodeblock = require('react-uikit-codeblock');

var _reactUikitCodeblock2 = _interopRequireDefault(_reactUikitCodeblock);

var _reactUikitTable = require('react-uikit-table');

var _reactUikitTable2 = _interopRequireDefault(_reactUikitTable);

var _reactUikitNote = require('react-uikit-note');

var _reactUikitNote2 = _interopRequireDefault(_reactUikitNote);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var items = [{
  Name: 'OTIS',
  score: 39,
  height: 5.6
}, {
  name: 'jocelyn',
  score: 65,
  height: 4.8
}, {
  name: 'Ania',
  score: -50,
  height: 6.10
}];

var data = [{ d1: 'Data', d2: 'Data', d3: 'Data' }, { d1: 'Data', d2: 'Data', d3: 'Data' }, { d1: 'Data', d2: 'Data', d3: 'Data' }];

var TableDoc = function TableDoc(props) {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      'section',
      null,
      _react2.default.createElement(
        'h1',
        null,
        'Table'
      ),
      _react2.default.createElement(
        'p',
        { className: 'uk-article-lead' },
        'Create nice looking tables.'
      ),
      _react2.default.createElement(
        'p',
        null,
        _react2.default.createElement(
          'a',
          { href: 'https://github.com/otissv/react-uikit-table' },
          'react-uikit-table'
        ),
        ' on github.'
      )
    ),
    _react2.default.createElement(
      'section',
      null,
      _react2.default.createElement(
        'h2',
        null,
        'Usage'
      ),
      _react2.default.createElement(
        _reactUikitCodeblock2.default,
        null,
        '<code>npm install react-uikit-table --save;\n\n// ES6\n<code>import Table from \'react-uikit-table\';\n\n// ES5\n<code>var Table = require(\'react-uikit-table\');'
      ),
      _react2.default.createElement('hr', { className: 'uk-article-divider' }),
      _react2.default.createElement(
        'h3',
        { className: 'example' },
        'Example'
      ),
      _react2.default.createElement(
        'p',
        null,
        'Table can be typed declaratively or generated by passing a JSON object to the ',
        _react2.default.createElement(
          'code',
          null,
          'body'
        ),
        ' prop.'
      ),
      _react2.default.createElement(
        _reactUikitNote2.default,
        null,
        'Generated nested properties are not supported at this time.'
      ),
      _react2.default.createElement(_reactUikitTable2.default, { caption: 'Generated table.', head: ['Heading', 'Heading', 'Heading'], body: data }),
      _react2.default.createElement(
        _reactUikitTable2.default,
        { caption: 'Table from Children.' },
        _react2.default.createElement(
          'thead',
          null,
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'th',
              { className: 'uk-text-left' },
              'Heading'
            ),
            _react2.default.createElement(
              'th',
              { className: 'uk-text-left' },
              'Heading'
            ),
            _react2.default.createElement(
              'th',
              { className: 'uk-text-left' },
              'Heading'
            )
          )
        ),
        _react2.default.createElement(
          'tbody',
          null,
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'Data'
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'Data'
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'Data'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'Data'
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'Data'
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'Data'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'Data'
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'Data'
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'Data'
            )
          )
        )
      ),
      _react2.default.createElement(
        'h4',
        { className: 'code' },
        'Code'
      ),
      _react2.default.createElement(
        _reactUikitCodeblock2.default,
        { scroll: 'text', syntax: 'xml' },
        'const data = [\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'}\n];\n...\n<Table caption=\'Generated table.\' head={[\'Heading\', \'Heading\', \'Heading\']} body={data}/>\n\n<Table caption=\'Table from Children.\'>\n  <thead>\n    <tr>\n      <th className=\'uk-text-left\'>Heading</th>\n      <th className=\'uk-text-left\'>Heading</th>\n      <th className=\'uk-text-left\'>Heading</th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr>\n      <td className=\'uk-text-left\'>Data</td>\n      <td className=\'uk-text-left\'>Data</td>\n      <td className=\'uk-text-left\'>Data</td>\n    </tr>\n    <tr>\n      <td className=\'uk-text-left\'>Data</td>\n      <td className=\'uk-text-left\'>Data</td>\n      <td className=\'uk-text-left\'>Data</td>\n    </tr>\n    <tr>\n      <td className=\'uk-text-left\'>Data</td>\n      <td className=\'uk-text-left\'>Data</td>\n      <td className=\'uk-text-left\'>Data</td>\n    </tr>\n  </tbody>\n</Table>\n...\n'
      )
    ),
    _react2.default.createElement(
      'section',
      null,
      _react2.default.createElement(
        'h2',
        null,
        'Table Head'
      ),
      _react2.default.createElement(
        'p',
        null,
        'Table headings can be set by passing a list of heading to the ',
        _react2.default.createElement(
          'code',
          null,
          'head=[]'
        ),
        ' prop.',
        _react2.default.createElement('br', null),
        'Alternatively, if the body prop is being used to generate table data, headings can also be generated by using the body\'s JSON keys like so, ',
        _react2.default.createElement(
          'code',
          null,
          'head=\'*\''
        ),
        '.'
      ),
      _react2.default.createElement(
        _reactUikitNote2.default,
        null,
        'Keys generate a list of headings in the order they appear. Also the keys will be case insensitive.'
      ),
      _react2.default.createElement(
        'h3',
        { className: 'example' },
        'Example'
      ),
      _react2.default.createElement(_reactUikitTable2.default, {
        caption: 'Headings from body keys.',
        condensed: true,
        head: '*', body: items }),
      _react2.default.createElement(_reactUikitTable2.default, {
        caption: 'Headins from prop.',
        condensed: true,
        head: ['Heading', 'Heading', 'Heading'],
        body: items }),
      _react2.default.createElement(
        'h4',
        { className: 'code' },
        'Code'
      ),
      _react2.default.createElement(
        _reactUikitCodeblock2.default,
        { scroll: 'text', syntax: 'xml' },
        'const items = [\n  {\n    Name: \'OTIS\',\n    score: 39,\n    height: 5.6\n  }, {\n    name: \'jocelyn\',\n    score: 65,\n    height: 4.8\n  }, {\n    name: \'Ania\',\n    score: -50,\n    height: 6.10\n  }\n];\n...\n<Table\n  caption=\'Headings from body keys.\'\n  condensed\n  head=\'*\' body={items}/>\n\n<Table\n  caption=\'Headins from prop.\'\n  condensed\n  head={[\'Heading\', \'Heading\', \'Heading\']}\n  body={items}/>\n...\n'
      )
    ),
    _react2.default.createElement(
      'section',
      null,
      _react2.default.createElement(
        'h2',
        null,
        'Table condensed'
      ),
      _react2.default.createElement(
        'p',
        null,
        'To make the table more compact add the ',
        _react2.default.createElement(
          'code',
          null,
          'condensed'
        ),
        ' prop to the Tables props.'
      ),
      _react2.default.createElement(
        'h3',
        { className: 'example' },
        'Example'
      ),
      _react2.default.createElement(_reactUikitTable2.default, {
        caption: 'Condensed table',
        condensed: true,
        head: ['Heading', 'Heading', 'Heading'],
        body: data }),
      _react2.default.createElement(
        'h4',
        { className: 'code' },
        'Code'
      ),
      _react2.default.createElement(
        _reactUikitCodeblock2.default,
        { syntax: 'xml' },
        'const data = [\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'}\n];\n...\n<Table\n  caption=\'Condensed table\'\n  condensed\n  head={[\'Heading\', \'Heading\', \'Heading\']}\n  body={data}/>\n...\n'
      )
    ),
    _react2.default.createElement(
      'section',
      null,
      _react2.default.createElement(
        'h2',
        null,
        'Table Hover'
      ),
      _react2.default.createElement(
        'p',
        null,
        'To highlight a row when it is hovered add the ',
        _react2.default.createElement(
          'code',
          null,
          'hover'
        ),
        ' prop to the Tables props.'
      ),
      _react2.default.createElement(
        'h3',
        { className: 'example' },
        'Example'
      ),
      _react2.default.createElement(_reactUikitTable2.default, {
        caption: 'Hoverable table',
        hover: true, head: ['Heading', 'Heading', 'Heading'],
        body: data }),
      _react2.default.createElement(
        'h4',
        { className: 'code' },
        'Code'
      ),
      _react2.default.createElement(
        _reactUikitCodeblock2.default,
        { syntax: 'xml' },
        'const data = [\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'}\n];\n...\n<Table\n  caption=\'Hoverable table\'\n  hover head={[\'Heading\', \'Heading\', \'Heading\']}\n  body={data}/>\n...\n'
      )
    ),
    _react2.default.createElement(
      'section',
      null,
      _react2.default.createElement(
        'h2',
        null,
        'Table striped'
      ),
      _react2.default.createElement(
        'p',
        null,
        'Add zebra-striping to table by adding the ',
        _react2.default.createElement(
          'code',
          null,
          'striped'
        ),
        ' prop to the Tables props.'
      ),
      _react2.default.createElement(
        'h3',
        { className: 'example' },
        'Example'
      ),
      _react2.default.createElement(_reactUikitTable2.default, {
        caption: 'Striped table',
        striped: true,
        head: ['Heading', 'Heading', 'Heading'],
        body: data }),
      _react2.default.createElement(
        'h4',
        { className: 'code' },
        'Code'
      ),
      _react2.default.createElement(
        _reactUikitCodeblock2.default,
        { syntax: 'xml' },
        'const data = [\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'}\n];\n...\n<Table\n  caption=\'Striped table\'\n  striped\n  head={[\'Heading\', \'Heading\', \'Heading\']}\n  body={data}/>\n...\n'
      )
    ),
    _react2.default.createElement(
      'section',
      null,
      _react2.default.createElement(
        'h2',
        null,
        'Table sort'
      ),
      _react2.default.createElement(
        'p',
        null,
        'Generated tables can be sorted by passing key names to the ',
        _react2.default.createElement(
          'code',
          null,
          'sort'
        ),
        ' prop. The sort prop can either be a string to sort by a single key or an array of keys to sort by  multiple keys.To reverse the sort on a field put \'-\' in front of the key name.'
      ),
      _react2.default.createElement(
        'h3',
        { className: 'example' },
        'Example'
      ),
      _react2.default.createElement(_reactUikitTable2.default, {
        caption: 'Sortable table',
        sort: ['name', '-height'],
        head: '*',
        body: items }),
      _react2.default.createElement(
        'h4',
        { className: 'code' },
        'Code'
      ),
      _react2.default.createElement(
        _reactUikitCodeblock2.default,
        { syntax: 'xml' },
        'const items = [\n  {\n    Name: \'OTIS\',\n    score: 39,\n    height: 5.6\n  }, {\n    name: \'jocelyn\',\n    score: 65,\n    height: 4.8\n  }, {\n    name: \'Ania\',\n    score: -50,\n    height: 6.10\n  }\n];\n...\n<Table\n  caption=\'Sortable table\'\n  sort={[\'name\', \'-height\']}\n  head=\'*\'\n  body={items}/>\n...\n'
      )
    ),
    _react2.default.createElement(
      'section',
      null,
      _react2.default.createElement(
        'h2',
        null,
        'Table numbered'
      ),
      _react2.default.createElement(
        'p',
        null,
        'Table row can be numbered by using the ',
        _react2.default.createElement(
          'code',
          null,
          'numbered'
        ),
        ' prop. To add a heading for the numbered column simply asign a string like so, ',
        _react2.default.createElement(
          'code',
          null,
          'numbered=\'#\''
        ),
        '.'
      ),
      _react2.default.createElement(
        'h3',
        { className: 'example' },
        'Example'
      ),
      _react2.default.createElement(_reactUikitTable2.default, {
        numbered: true,
        condensed: true,
        caption: 'Numbered table.',
        head: ['Heading', 'Heading', 'Heading'],
        body: data
      }),
      _react2.default.createElement(_reactUikitTable2.default, {
        numbered: '#',
        condensed: true,
        caption: 'Numbered table heading.',
        head: ['Heading', 'Heading', 'Heading'],
        body: data
      }),
      _react2.default.createElement(
        'h4',
        { className: 'code' },
        'Code'
      ),
      _react2.default.createElement(
        _reactUikitCodeblock2.default,
        { syntax: 'xml' },
        'const data = [\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'},\n  {d1: \'Data\', d2: \'Data\', d3: \'Data\'}\n];\n...\n<Table\n  numbered\n  condensed\n  caption=\'Numbered table.\'\n  head={[\'Heading\', \'Heading\', \'Heading\']}\n  body={data}\n/>\n\n<Table\n  numbered=\'#\'\n  condensed\n  caption=\'Numbered table heading.\'\n  head={[\'Heading\', \'Heading\', \'Heading\']}\n  body={data}\n/>\n...'
      )
    ),
    _react2.default.createElement(
      'section',
      null,
      _react2.default.createElement(
        'h2',
        null,
        'Table props'
      ),
      _react2.default.createElement(
        'p',
        null,
        'See base component for additional utility props.'
      ),
      _react2.default.createElement(
        _reactUikitTable2.default,
        null,
        _react2.default.createElement(
          'thead',
          null,
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'th',
              { className: 'uk-text-left' },
              'Prop'
            ),
            _react2.default.createElement(
              'th',
              { className: 'uk-text-left' },
              'Type'
            )
          )
        ),
        _react2.default.createElement(
          'tbody',
          null,
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              _react2.default.createElement(
                'code',
                null,
                'body'
              )
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'array'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              _react2.default.createElement(
                'code',
                null,
                'caption'
              )
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'string'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              _react2.default.createElement(
                'code',
                null,
                'condensed'
              )
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'bool'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              _react2.default.createElement(
                'code',
                null,
                'hover'
              )
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'bool'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              _react2.default.createElement(
                'code',
                null,
                'head'
              )
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'oneOfType',
              _react2.default.createElement('br', null),
              'array or string'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              _react2.default.createElement(
                'code',
                null,
                'numbered'
              ),
              'numbered'
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'oneOfType',
              _react2.default.createElement('br', null),
              'bool or string'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              _react2.default.createElement(
                'code',
                null,
                'overflow'
              )
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'bool'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              _react2.default.createElement(
                'code',
                null,
                'sort'
              )
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'oneOfType',
              _react2.default.createElement('br', null),
              'array or string'
            )
          ),
          _react2.default.createElement(
            'tr',
            null,
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              _react2.default.createElement(
                'code',
                null,
                'striped'
              )
            ),
            _react2.default.createElement(
              'td',
              { className: 'uk-text-left' },
              'bool'
            )
          )
        )
      )
    )
  );
};

exports.default = TableDoc;