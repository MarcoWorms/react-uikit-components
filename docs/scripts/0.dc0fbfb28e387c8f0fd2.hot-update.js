webpackHotUpdate(0,{

/***/ 964:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(811);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _tableData = __webpack_require__(962);\n\nvar _tableData2 = _interopRequireDefault(_tableData);\n\nvar _sortIt = __webpack_require__(961);\n\nvar _sortIt2 = _interopRequireDefault(_sortIt);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\n// Convert object to array with index column position\nvar bodyToArray = function bodyToArray(body, columns) {\n\n  return body.map(function (item) {\n    return Object.keys(item).map(function (k) {\n      var pos = columns.map(function (i) {\n        return i.toLowerCase();\n      }).indexOf(k.toLowerCase());\n\n      return [k, item[k], pos];\n    });\n  });\n};\n\n// Sorts a collection of data\nvar sort = function sort(data, critera) {\n  if (!critera) return data;\n  return (0, _sortIt2.default)(data, critera);\n};\n\nvar numbered = function numbered(index) {\n  return _react2.default.createElement('td', null, index + 1);\n};\n\nvar TableRows = function TableRows(props, columns) {\n  return bodyToArray(sort(props.body, props.sort), columns).map(function (item, index) {\n    return _react2.default.createElement('tr', { key: index, 'data-kitid': 'tablerow-' + index + '-' + props.kitid }, props.numbered ? numbered(index) : null, (0, _tableData2.default)({\n      columns: columns,\n      item: item,\n      index: index,\n      kitid: props.kitid\n    }));\n  });\n};\n\nTableRows.propTypes = {\n  body: _react2.default.PropTypes.array,\n  kitid: _react2.default.PropTypes.string,\n  numbered: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.string]),\n  sort: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.array, _react2.default.PropTypes.string])\n};\n\nexports.default = TableRows;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vY29tcG9uZW50cy9yZWFjdC11aWtpdC10YWJsZS9saWIvdGFibGUtcm93cy5qcz9hY2E4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7QUFFYixNQUFNLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUU7QUFDM0MsT0FBSyxFQUFFLElBQUk7Q0FDWixDQUFDLENBQUM7O0FBRUgsSUFBSSxNQUFNLEdBQUcsbUJBQU8sQ0FBQyxHQUFPLENBQUMsQ0FBQzs7QUFFOUIsSUFBSSxPQUFPLEdBQUcsc0JBQXNCLENBQUMsTUFBTSxDQUFDLENBQUM7O0FBRTdDLElBQUksVUFBVSxHQUFHLG1CQUFPLENBQUMsR0FBYyxDQUFDLENBQUM7O0FBRXpDLElBQUksV0FBVyxHQUFHLHNCQUFzQixDQUFDLFVBQVUsQ0FBQyxDQUFDOztBQUVyRCxJQUFJLE9BQU8sR0FBRyxtQkFBTyxDQUFDLEdBQVMsQ0FBQyxDQUFDOztBQUVqQyxJQUFJLFFBQVEsR0FBRyxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsQ0FBQzs7QUFFL0MsU0FBUyxzQkFBc0IsQ0FBQyxHQUFHLEVBQUU7QUFBRSxTQUFPLEdBQUcsSUFBSSxHQUFHLENBQUMsVUFBVSxHQUFHLEdBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQztDQUFFOzs7QUFHL0YsSUFBSSxXQUFXLEdBQUcsU0FBUyxXQUFXLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRTs7QUFFcEQsU0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsSUFBSSxFQUFFO0FBQzlCLFdBQU8sTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEVBQUU7QUFDeEMsVUFBSSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsRUFBRTtBQUNqQyxlQUFPLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztPQUN4QixDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDOztBQUU1QixhQUFPLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztLQUMxQixDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7Q0FDSjs7O0FBR0QsSUFBSSxJQUFJLEdBQUcsU0FBUyxJQUFJLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRTtBQUN0QyxNQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sSUFBSSxDQUFDO0FBQzFCLFNBQU8sQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7Q0FDN0MsQ0FBQzs7QUFFRixJQUFJLFFBQVEsR0FBRyxTQUFTLFFBQVEsQ0FBQyxLQUFLLEVBQUU7QUFDdEMsU0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FDbEMsSUFBSSxFQUNKLElBQUksRUFDSixLQUFLLEdBQUcsQ0FBQyxDQUNWLENBQUM7Q0FDSCxDQUFDOztBQUVGLElBQUksU0FBUyxHQUFHLFNBQVMsU0FBUyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUU7QUFDakQsU0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLElBQUksRUFBRSxLQUFLLEVBQUU7QUFDbkYsV0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FDbEMsSUFBSSxFQUNKLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsV0FBVyxHQUFHLEtBQUssR0FBRyxHQUFHLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUNyRSxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLEVBQ3ZDLENBQUMsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxPQUFPLEVBQUU7QUFDdkIsYUFBTyxFQUFFLE9BQU87QUFDaEIsVUFBSSxFQUFFLElBQUk7QUFDVixXQUFLLEVBQUUsS0FBSztBQUNaLFdBQUssRUFBRSxLQUFLLENBQUMsS0FBSztLQUNuQixDQUFDLENBQ0gsQ0FBQztHQUNILENBQUMsQ0FBQztDQUNKLENBQUM7O0FBRUYsU0FBUyxDQUFDLFNBQVMsR0FBRztBQUNwQixNQUFJLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsS0FBSztBQUNyQyxPQUFLLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTTtBQUN2QyxVQUFRLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ2pILE1BQUksRUFBRSxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7Q0FDL0csQ0FBQzs7QUFFRixPQUFPLENBQUMsT0FBTyxHQUFHLFNBQVMiLCJmaWxlIjoiOTY0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfdGFibGVEYXRhID0gcmVxdWlyZSgnLi90YWJsZS1kYXRhJyk7XG5cbnZhciBfdGFibGVEYXRhMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RhYmxlRGF0YSk7XG5cbnZhciBfc29ydEl0ID0gcmVxdWlyZSgnc29ydC1pdCcpO1xuXG52YXIgX3NvcnRJdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zb3J0SXQpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBDb252ZXJ0IG9iamVjdCB0byBhcnJheSB3aXRoIGluZGV4IGNvbHVtbiBwb3NpdGlvblxudmFyIGJvZHlUb0FycmF5ID0gZnVuY3Rpb24gYm9keVRvQXJyYXkoYm9keSwgY29sdW1ucykge1xuXG4gIHJldHVybiBib2R5Lm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhpdGVtKS5tYXAoZnVuY3Rpb24gKGspIHtcbiAgICAgIHZhciBwb3MgPSBjb2x1bW5zLm1hcChmdW5jdGlvbiAoaSkge1xuICAgICAgICByZXR1cm4gaS50b0xvd2VyQ2FzZSgpO1xuICAgICAgfSkuaW5kZXhPZihrLnRvTG93ZXJDYXNlKCkpO1xuXG4gICAgICByZXR1cm4gW2ssIGl0ZW1ba10sIHBvc107XG4gICAgfSk7XG4gIH0pO1xufTtcblxuLy8gU29ydHMgYSBjb2xsZWN0aW9uIG9mIGRhdGFcbnZhciBzb3J0ID0gZnVuY3Rpb24gc29ydChkYXRhLCBjcml0ZXJhKSB7XG4gIGlmICghY3JpdGVyYSkgcmV0dXJuIGRhdGE7XG4gIHJldHVybiAoMCwgX3NvcnRJdDIuZGVmYXVsdCkoZGF0YSwgY3JpdGVyYSk7XG59O1xuXG52YXIgbnVtYmVyZWQgPSBmdW5jdGlvbiBudW1iZXJlZChpbmRleCkge1xuICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgJ3RkJyxcbiAgICBudWxsLFxuICAgIGluZGV4ICsgMVxuICApO1xufTtcblxudmFyIFRhYmxlUm93cyA9IGZ1bmN0aW9uIFRhYmxlUm93cyhwcm9wcywgY29sdW1ucykge1xuICByZXR1cm4gYm9keVRvQXJyYXkoc29ydChwcm9wcy5ib2R5LCBwcm9wcy5zb3J0KSwgY29sdW1ucykubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkge1xuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICd0cicsXG4gICAgICB7IGtleTogaW5kZXgsICdkYXRhLWtpdGlkJzogJ3RhYmxlcm93LScgKyBpbmRleCArICctJyArIHByb3BzLmtpdGlkIH0sXG4gICAgICBwcm9wcy5udW1iZXJlZCA/IG51bWJlcmVkKGluZGV4KSA6IG51bGwsXG4gICAgICAoMCwgX3RhYmxlRGF0YTIuZGVmYXVsdCkoe1xuICAgICAgICBjb2x1bW5zOiBjb2x1bW5zLFxuICAgICAgICBpdGVtOiBpdGVtLFxuICAgICAgICBpbmRleDogaW5kZXgsXG4gICAgICAgIGtpdGlkOiBwcm9wcy5raXRpZFxuICAgICAgfSlcbiAgICApO1xuICB9KTtcbn07XG5cblRhYmxlUm93cy5wcm9wVHlwZXMgPSB7XG4gIGJvZHk6IF9yZWFjdDIuZGVmYXVsdC5Qcm9wVHlwZXMuYXJyYXksXG4gIGtpdGlkOiBfcmVhY3QyLmRlZmF1bHQuUHJvcFR5cGVzLnN0cmluZyxcbiAgbnVtYmVyZWQ6IF9yZWFjdDIuZGVmYXVsdC5Qcm9wVHlwZXMub25lT2ZUeXBlKFtfcmVhY3QyLmRlZmF1bHQuUHJvcFR5cGVzLmJvb2wsIF9yZWFjdDIuZGVmYXVsdC5Qcm9wVHlwZXMuc3RyaW5nXSksXG4gIHNvcnQ6IF9yZWFjdDIuZGVmYXVsdC5Qcm9wVHlwZXMub25lT2ZUeXBlKFtfcmVhY3QyLmRlZmF1bHQuUHJvcFR5cGVzLmFycmF5LCBfcmVhY3QyLmRlZmF1bHQuUHJvcFR5cGVzLnN0cmluZ10pXG59O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBUYWJsZVJvd3M7XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi4vY29tcG9uZW50cy9yZWFjdC11aWtpdC10YWJsZS9saWIvdGFibGUtcm93cy5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }

})