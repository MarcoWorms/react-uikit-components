webpackHotUpdate(0,{

/***/ 620:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ufunc = __webpack_require__(171);\n\nvar _ufunc2 = _interopRequireDefault(_ufunc);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nvar pos = function pos(element) {\n  return {\n    top: element.offsetTop,\n    left: element.offsetLeft\n  };\n};\n\nvar dim = function dim(element) {\n  return {\n    height: element.offsetHeight,\n    width: element.offsetWidth\n  };\n};\n\nvar offset = function offset(opts) {\n  var target = opts.target;\n  var element = opts.element;\n  var flip = opts.flip;\n  var boundary = opts.boundary;\n\n  var boundaryDim = undefined;\n\n  if (boundary) {\n    boundaryDim = dim(boundary);\n  } else {\n    boundaryDim = {\n      width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n      height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n    };\n  }\n\n  var targetDetails = {\n    pos: pos(target),\n    dim: dim(target),\n    boundary: target.getBoundingClientRect()\n  };\n\n  var elementDetails = {\n    pos: pos(element),\n    dim: dim(element),\n    boundary: element.getBoundingClientRect()\n  };\n\n  var horFlip = _ufunc2.default.either(function () {\n    return targetDetails.pos.top + targetDetails.dim.height;\n  }, function () {\n    return targetDetails.pos.top - elementDetails.dim.height;\n  });\n\n  var lrVerFlip = _ufunc2.default.either(function () {\n    return targetDetails.pos.left + targetDetails.dim.width;\n  }, function () {\n    return targetDetails.pos.left - elementDetails.dim.width;\n  });\n\n  var tbVerLeft = targetDetails.pos.left;\n  var tbVerRight = targetDetails.pos.left - (elementDetails.dim.width - targetDetails.dim.width);\n\n  var horCenter = targetDetails.pos.left - (elementDetails.dim.width - targetDetails.dim.width) / 2;\n  var verCenter = bottom - (elementDetails.dim.height + targetDetails.dim.height) / 2;\n\n  var top = undefined;\n  var bottom = undefined;\n  var lrHorLeft = undefined;\n  var lrHorRight = undefined;\n\n  if (flip) {\n    top = horFlip(flip && targetDetails.boundary.top - elementDetails.dim.height < 0);\n    bottom = horFlip(flip && targetDetails.boundary.top + elementDetails.dim.height + targetDetails.dim.height < boundaryDim.height);\n    lrHorLeft = lrVerFlip(targetDetails.boundary.left - elementDetails.dim.width < 0);\n    lrHorRight = lrVerFlip(targetDetails.boundary.left + elementDetails.dim.width + targetDetails.dim.width < boundaryDim.width);\n  } else {\n    top = horFlip(false);\n    bottom = horFlip(true);\n    lrHorLeft = lrVerFlip(false);\n    lrHorRight = lrVerFlip(true);\n  }\n\n  console.log(bottom);\n  console.log(elementDetails.dim.height, '+', targetDetails.dim.height, '=', (elementDetails.dim.height + targetDetails.dim.height) / 2);\n  console.log(verCenter);\n\n  var position = {\n\n    'bottom-left': { top: bottom, left: tbVerLeft },\n    'bottom-center': { top: bottom, left: horCenter },\n    'bottom-right': { top: bottom, left: tbVerRight },\n\n    'top-left': { top: top, left: tbVerLeft },\n    'top-center': { top: top, left: horCenter },\n    'top-right': { top: top, left: tbVerRight },\n\n    'left-top': { top: top, left: lrHorLeft },\n    'left-center': { top: verCenter, left: lrHorLeft },\n    'left-bottom': { top: bottom, left: lrHorLeft },\n\n    'right-top': { top: top, left: lrHorRight },\n    'right-center': { top: verCenter, left: lrHorRight },\n    'right-bottom': { top: bottom, left: lrHorRight }\n  };\n\n  return function (prop) {\n    return position[prop] || position['bottom-left'];\n  };\n};\n\nexports.default = {\n  dim: dim,\n  pos: pos,\n  offset: offset\n};\n//# sourceMappingURL=data:application/json;base64,");

/***/ }

})