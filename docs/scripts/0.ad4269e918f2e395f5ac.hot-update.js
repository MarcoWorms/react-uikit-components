webpackHotUpdate(0,{

/***/ 3622:
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _createClass = (function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n})();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(1682);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactUikitBase = __webpack_require__(164);\n\nvar _reactUikitBase2 = _interopRequireDefault(_reactUikitBase);\n\nvar _ufunc = __webpack_require__(1683);\n\nvar _ufunc2 = _interopRequireDefault(_ufunc);\n\nvar _listItem = __webpack_require__(1856);\n\nvar _listItem2 = _interopRequireDefault(_listItem);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar List = (function (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _possibleConstructorReturn(this, Object.getPrototypeOf(List).apply(this, arguments));\n  }\n\n  _createClass(List, [{\n    key: 'handleClick',\n    value: function handleClick(e, index) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.props.onClick(Object.assign({ kitid: this.getItemId(index) }, e));\n    }\n  }, {\n    key: 'handleSelect',\n    value: function handleSelect(e, index) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.props.onSelect(Object.assign({ kitid: this.getItemId(index) }, e));\n    }\n  }, {\n    key: 'getItemId',\n    value: function getItemId(index) {\n      var idx = undefined;\n      if (index.charAt && index.charAt(0) === '.') {\n        idx = index.match(/\\$(.+)$/)[1];\n      } else {\n        idx = index;\n      }\n\n      return 'item-' + idx + '-' + this.props.kitid;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n      var ignoreProps = ['type'];\n      var cleanProps = _reactUikitBase2.default.helpers.cleanProps(ignoreProps)(props);\n\n      // CSS classes\n      var isLine = _ufunc2.default.either('uk-list-line', 'uk-description-list-line');\n      var isHor = _ufunc2.default.maybeIf('uk-description-list-horizontal')(props.type === 'description');\n\n      var cssClassNames = _reactUikitBase2.default.helpers.cleanClasses([props.type !== 'description' ? 'uk-list' : null, props.horizontal ? isHor : null, !props.line ? null : isLine(props.type !== 'description'), props.striped ? 'uk-list-striped' : null, props.space ? 'uk-list-space' : null, props.classes, props.className]);\n\n      // Elements\n      var selectable = function selectable(checked, index) {\n        return _ufunc2.default.maybeIf(_react2.default.createElement('input', {\n          type: 'checkbox',\n          className: 'close',\n          checked: checked,\n          onSelect: function onSelect(e, index) {\n            return _this2.handleSelect(e, index);\n          }\n        }))(props.selectable);\n      };\n\n      var link = function link(item, index) {\n        return _react2.default.createElement(_listItem2.default, _extends({\n          key: index\n        }, item, {\n          kitid: _this2.getItemId(index),\n          selectable: selectable(item.checked, index),\n          onClick: function onClick(e, index) {\n            return _this2.handleClick(e, index);\n          }\n        }));\n      };\n\n      var text = function text(item, index) {\n        return _react2.default.createElement(_listItem2.default, {\n          key: index,\n          body: item,\n          kitid: _this2.getItemId(index)\n        });\n      };\n\n      var items = undefined;\n      if (props.items) {\n        items = props.items.map(function (item, index) {\n          return _ufunc2.default.either(link(item, index), text(item, index))(item.href);\n        });\n      }\n\n      var attr = _extends({}, cleanProps, _reactUikitBase2.default.events(props), {\n        'data-kitid': props.kitid,\n        className: cssClassNames\n      });\n\n      var type = {\n        unorderd: _react2.default.createElement('ul', attr, items, props.children),\n\n        ordered: _react2.default.createElement('ol', attr, items, props.children),\n\n        description: _react2.default.createElement('dl', attr, props.children)\n      };\n\n      // Return Component\n      return type[props.type] || type['unorderd'];\n    }\n  }]);\n\n  return List;\n})(_react2.default.Component);\n\n;\n\nList.propTypes = {\n  children: _react2.default.PropTypes.any,\n  className: _react2.default.PropTypes.string,\n  classes: _react2.default.PropTypes.array,\n  description: _react2.default.PropTypes.string,\n  items: _react2.default.PropTypes.array,\n  horizontal: _react2.default.PropTypes.bool,\n  kitid: _react2.default.PropTypes.string,\n  line: _react2.default.PropTypes.bool,\n  onClick: _react2.default.PropTypes.func,\n  onSelect: _react2.default.PropTypes.func,\n  striped: _react2.default.PropTypes.bool,\n  selectable: _react2.default.PropTypes.bool,\n  space: _react2.default.PropTypes.bool,\n  type: _react2.default.PropTypes.oneOf(['description', 'ordered', 'unorderd'])\n};\n\nexports.default = _reactUikitBase2.default.base(List);\n//# sourceMappingURL=data:application/json;base64,");

/***/ }

})